<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Max Malm</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Max Malm</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Jul 2015 17:02:26 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>test</title>
      <link>http://localhost:1313/test/</link>
      <pubDate>Wed, 22 Jul 2015 17:02:26 +0200</pubDate>
      
      <guid>http://localhost:1313/test/</guid>
      <description></description>
    </item>
    
    <item>
      <title>first</title>
      <link>http://localhost:1313/post/first/</link>
      <pubDate>Wed, 22 Jul 2015 16:57:35 +0200</pubDate>
      
      <guid>http://localhost:1313/post/first/</guid>
      <description>&lt;p&gt;My test post&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to not run a company</title>
      <link>http://localhost:1313/blog/2015-06-22-how-to-not-run-a-company/</link>
      <pubDate>Mon, 22 Jun 2015 17:42:04 +0200</pubDate>
      
      <guid>http://localhost:1313/blog/2015-06-22-how-to-not-run-a-company/</guid>
      <description>&lt;p&gt;12 days ago I opened a ticket because I needed help finding the hot folder so I can scan documents to this folder and the system would process them. Simply put, scan document X to folder Y, the system grabs document X and takes care of it. Simple enough?&lt;/p&gt;

&lt;p&gt;I wasn&amp;rsquo;t really clear on how it worked, I just mentioned &lt;em&gt;hot folder&lt;/em&gt; thinking they would understand what I meant, that was my fault, I shouldn&amp;rsquo;t have internal slang for this. That one is on me.&lt;/p&gt;

&lt;p&gt;4 days later I get an e-mail back asking &amp;ldquo;what is a hot folder?&amp;rdquo;. I reply back explaining what I want to do. &amp;ldquo;A folder I can scan to which your program checks with regular intervals&amp;rdquo;. Should be enough. This is on a Sunday. I&amp;rsquo;m assuming I&amp;rsquo;ll get the answer Monday or Tuesday maybe. Friday is off since it&amp;rsquo;s &lt;strong&gt;St John&amp;rsquo;s Eve&lt;/strong&gt; and most people are off but they should be able to squeeze my ticket in, right?&lt;/p&gt;

&lt;p&gt;Nope. It&amp;rsquo;s now Monday. 12 days since the original ticket opened and I&amp;rsquo;m getting restless, I need to solve this because like everything in IT something depends on this which in turn has something depending on it. People are asking me about the status on this case and all I can do is wait. I call the company making the software and they ask me to e-mail. But I&amp;rsquo;ve already done that.&lt;/p&gt;

&lt;p&gt;So getting fed up with this I shoot an e-mail to our KAM (key account manager). I get an instant bounce saying that e-mail doesn&amp;rsquo;t exist. Huh? That&amp;rsquo;s weird, since he was here a couple months ago doing a presentation.&lt;/p&gt;

&lt;p&gt;Calling their switchboard asking for our KAM and if he still works there I&amp;rsquo;m told they&amp;rsquo;re an external switchboard service and according to their lists he still works here. Okay cool, must be some server glitch on their end and I ask to be connected. &amp;ldquo;Number no in service&amp;rdquo;. Great. I call again asking for our old KAM. No answer. His cell. No answer. The sales director. No answer.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going crazy here. While I&amp;rsquo;m writing this down to vent my anger I get a call from our old KAM. He says that our current KAM quit, but he&amp;rsquo;s not sure if we got the info about it. Great. He doesn&amp;rsquo;t know if he&amp;rsquo;s our new KAM as well. I feel like I&amp;rsquo;m taking crazy pills. He&amp;rsquo;s gonna look at my ticket and see who&amp;rsquo;s our new KAM. Maybe this can be solved this week. Maybe not.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s time for a license renewal soon. Let&amp;rsquo;s see if they can send the license file on time this year. I hate it when no one can do any work and I&amp;rsquo;m at fault.&lt;/p&gt;

&lt;p&gt;Edit: Our first KAM called again. We have a new one, but he&amp;rsquo;s on vacation. Yay!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DigitalOcean &#43; Dokku &#43; Meteor</title>
      <link>http://localhost:1313/blog/2015-06-12-digitalocean-dokku-meteor/</link>
      <pubDate>Fri, 12 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-06-12-digitalocean-dokku-meteor/</guid>
      <description>

&lt;p&gt;So for two weeks now I&amp;rsquo;ve been running Dokku on DigitalOcean for my Meteor apps (and some old PHP apps as well).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve read a few guides about it, but I feel they all leave something out so I&amp;rsquo;ll try to collect everything I&amp;rsquo;ve learned so far about the subject.&lt;/p&gt;

&lt;h3 id=&#34;what-is-dokku:2678be1fe8615c125bd40f0922167d34&#34;&gt;What is Dokku?&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Docker powered mini-Heroku. The smallest PaaS implementation you&amp;rsquo;ve ever seen.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Run docker containers without knowing Docker, push code via git and support for buildpacks. It&amp;rsquo;s great!&lt;/p&gt;

&lt;h3 id=&#34;the-hard-choice:2678be1fe8615c125bd40f0922167d34&#34;&gt;The hard choice&lt;/h3&gt;

&lt;p&gt;First of all you want a domain to use for easier app control, let&amp;rsquo;s use &lt;code&gt;apps.example.com&lt;/code&gt; as our base and &lt;code&gt;*.apps.example.com&lt;/code&gt; for our apps. Say we deploy an app called &lt;code&gt;test&lt;/code&gt;, it would get the domain &lt;code&gt;test.apps.example.com&lt;/code&gt;. We can of course add more domains later on, for example &lt;code&gt;test.com&lt;/code&gt;. Choose a domain and we&amp;rsquo;ll get back to this later.&lt;/p&gt;

&lt;h3 id=&#34;creating-the-server:2678be1fe8615c125bd40f0922167d34&#34;&gt;Creating the server&lt;/h3&gt;

&lt;p&gt;The DigitalOcean part is kind of straight forward. Sign up (&lt;a href=&#34;https://www.digitalocean.com/?refcode=36ba60ad6e89&#34;&gt;$10 free credit&lt;/a&gt;) and go to &lt;a href=&#34;https://cloud.digitalocean.com/droplets/new&#34;&gt;Create droplet&lt;/a&gt;. Pick a name for your droplet, for example &lt;code&gt;my-dokku&lt;/code&gt;, choose a size and a region. Click on &lt;strong&gt;Applications&lt;/strong&gt; and choose &lt;strong&gt;Dokku&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We do want add an SSH key for this droplet, if you&amp;rsquo;re not familiar with SSH keys I suggest reading &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys&amp;ndash;2&lt;/a&gt;. Don&amp;rsquo;t skip this step since you will have to read it later anyway and you will have trouble with pushing your application to Dokku.&lt;/p&gt;

&lt;p&gt;Add your key and select it, then click on &amp;ldquo;Create droplet&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/ddm_create.png&#34; alt=&#34;Image Alt&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After the image is created you&amp;rsquo;ll see the dashboard for your droplet. Here we can control our droplet such as power it off, remove it, take snapshots, and resize it. The important part here for now is the IP address. The one I got was &lt;code&gt;188.166.29.28&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/ddm_droplet.png&#34; alt=&#34;Image Alt&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;configure-domain:2678be1fe8615c125bd40f0922167d34&#34;&gt;Configure domain&lt;/h3&gt;

&lt;p&gt;Now what I did was to point the domains we previously talked about to this IP address. In my case it looked like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;188.166.29.28 *.apps.example.com
188.166.29.28 apps.example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this is done I point my browser to &lt;a href=&#34;http://apps.example.com&#34;&gt;http://apps.example.com&lt;/a&gt; to continue with the Dokku setup. Since I&amp;rsquo;ve already added my SSH public key it&amp;rsquo;s already filled out by Dokku. Fill in &lt;code&gt;apps.example.com&lt;/code&gt; under &lt;strong&gt;Hostname&lt;/strong&gt; and click &lt;em&gt;Use virtualhost naming for apps&lt;/em&gt;. Click &lt;em&gt;Finish setup&lt;/em&gt; and we&amp;rsquo;ll move on to the next step. You will here be redirected to the Dokku documentation for deploying the heroku node test app. Let&amp;rsquo;s ignore this for now and move on to deploying our first Meteor application&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/ddm_hostname.png&#34; alt=&#34;Image Alt&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;mongodb-dokku-true:2678be1fe8615c125bd40f0922167d34&#34;&gt;MongoDB + dokku = true&lt;/h3&gt;

&lt;p&gt;Before we actually deploy our app we need to add a MongoDB-container to our Dokku installation. SSH to &lt;code&gt;apps.example.com&lt;/code&gt; using the SSH public key we created before. Run the following commands to install the MongoDB-plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/jeffutter/dokku-mongodb-plugin.git /var/lib/dokku/plugins/mongodb
dokku plugins-install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This might take a while since MongoDB has to be installed. If you want to read more about the plugin please see the Github repository at &lt;a href=&#34;https://github.com/jeffutter/dokku-mongodb-plugin&#34;&gt;https://github.com/jeffutter/dokku-mongodb-plugin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First we need to start the MongoDB-instance. Do this with &lt;code&gt;dokku mongodb:start&lt;/code&gt;. Now let&amp;rsquo;s create a db for our app, the one called &lt;code&gt;test&lt;/code&gt; with &lt;code&gt;dokku mongodb:create test&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;your-first-application:2678be1fe8615c125bd40f0922167d34&#34;&gt;Your first application&lt;/h3&gt;

&lt;p&gt;Put your SSH session aside and let&amp;rsquo;s go back to our development. Let&amp;rsquo;s use the Todos demo for Meteor&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;meteor create --example todos test
cd test
meteor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will start our Meteor application. We don&amp;rsquo;t really need to but make sure everything works by going to &lt;a href=&#34;http://localhost:3000&#34;&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now we just need one more thing before we push our application to our Dokku installation, to tell Dokku how to build our application. Dokku doesn&amp;rsquo;t really know it&amp;rsquo;s a Meteor application but there is an easy way called buildpacks which instructs Dokku what it should do with the code we are sending.&lt;/p&gt;

&lt;p&gt;Create a new file called &lt;code&gt;.env&lt;/code&gt; in your root directory with the contents &lt;code&gt;export BUILDPACK_URL=&#39;https://github.com/AdmitHub/meteor-buildpack-horse.git&#39;&lt;/code&gt;. Dokku will then use this buildpack to compile and run our application.&lt;/p&gt;

&lt;h3 id=&#34;deploying:2678be1fe8615c125bd40f0922167d34&#34;&gt;Deploying&lt;/h3&gt;

&lt;p&gt;Now we just need to initialize a repository and push it to Dokku.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
git add .
git commit -m &amp;quot;initial commit&amp;quot;
git remote add dokku dokku@apps.example.com:test
git push dokku master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s break it down. &lt;code&gt;git init&lt;/code&gt; creates a local git repository. &lt;code&gt;git add .&lt;/code&gt; stages all files in our directory and &lt;code&gt;git commit -m &amp;quot;intial commit&amp;quot;&lt;/code&gt; creates a commit with the message &lt;em&gt;initial commit&lt;/em&gt;. &lt;code&gt;git add&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt; is probably the commands I use most when working with git.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git remote add dokku dokku@apps.example.com:test&lt;/code&gt; tells us we have a remote destination called dokku and &lt;code&gt;dokku@apps.example.com:test&lt;/code&gt; is the destination. &lt;code&gt;test&lt;/code&gt; is what your app will be called later, in this case &lt;code&gt;test.apps.example.com&lt;/code&gt;. &lt;code&gt;git push dokku master&lt;/code&gt; pushes our HEAD to the remote location.&lt;/p&gt;

&lt;p&gt;Your first deploy will fail since we have no &lt;strong&gt;ROOT_URL&lt;/strong&gt; set which Meteor needs (&lt;em&gt;Error: Must pass options.rootUrl or set ROOT_URL in the server environment&lt;/em&gt;). Go back to your SSH session and type &lt;code&gt;dokku config:set test ROOT_URL=http://test.apps.example.com&lt;/code&gt;. This will the &lt;strong&gt;ROOT_URL&lt;/strong&gt; and we can deploy again. We will not be needing to do this again. Also note in the build logs that &lt;strong&gt;MONGO_URL&lt;/strong&gt; is set without us doing anything. If you want to run seperate MongoDB-servers you can set this value the same way as the &lt;strong&gt;ROOT_URL&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To deploy again just run &lt;code&gt;git push dokku master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So, now we can visit &lt;a href=&#34;http://test.apps.example.com&#34;&gt;http://test.apps.example.com&lt;/a&gt; to see our app in all it&amp;rsquo;s glory.&lt;/p&gt;

&lt;p&gt;If you read the build logs you will notice the process stating it waits 35 seconds until finalizing your deploy. This is because we don&amp;rsquo;t have any checks, but let&amp;rsquo;s add that. In your project root create a file called &lt;code&gt;CHECKS&lt;/code&gt;. In this put the following content:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/ Todos - All your todos synced wherever you happen to be
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will check our website root for the text &lt;em&gt;Todos - All your todos synced wherever you happen to be&lt;/em&gt;, if it&amp;rsquo;s not there Dokku will abort the deploy.&lt;/p&gt;

&lt;h3 id=&#34;updating-your-application:2678be1fe8615c125bd40f0922167d34&#34;&gt;Updating your application&lt;/h3&gt;

&lt;p&gt;Now, add the file to git with &lt;code&gt;git add CHECKS&lt;/code&gt; and commit it with &lt;code&gt;git commit -m &amp;quot;added CHECKS file&amp;quot;&lt;/code&gt;. Now you can push it to Dokku again with &lt;code&gt;git push dokku master&lt;/code&gt;. Now you&amp;rsquo;ve also learned how to update your application!&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s hook up our main domain, &lt;code&gt;test.com&lt;/code&gt;. Point it to the same IP address as before.&lt;/p&gt;

&lt;p&gt;Now in your SSH session type &lt;code&gt;dokku domains:add test test.com&lt;/code&gt; where the first &lt;em&gt;test&lt;/em&gt; is the name of our application. &lt;em&gt;www.test.com&lt;/em&gt; will be added as well. Finally, change your &lt;code&gt;ROOT\_URL&lt;/code&gt; to our new domain with &lt;code&gt;dokku config:set test ROOT_URL=http://test.com&lt;/code&gt;. As you can see Dokku runs our CHECKS file here as well. Visit &lt;a href=&#34;http://test.com&#34;&gt;http://test.com&lt;/a&gt; and enjoy the fruits of your hard work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/ddm_deployed.gif&#34; alt=&#34;Image Alt&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In action&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;what-now:2678be1fe8615c125bd40f0922167d34&#34;&gt;What now?&lt;/h3&gt;

&lt;p&gt;You most likely want to add a swap drive to your host to offload the RAM when the usage is high. See this excellent guide by Justin at &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04&#34;&gt;https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Test post, please ignore</title>
      <link>http://localhost:1313/blog/2015-06-02-test-post-please-ignore/</link>
      <pubDate>Tue, 02 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-06-02-test-post-please-ignore/</guid>
      <description>&lt;p&gt;Now serving Grav via Dokku and deploying via git. I&amp;rsquo;ll write a post about this soon™&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Have you met Flynn?</title>
      <link>http://localhost:1313/blog/2015-05-08-have-you-met-flynn/</link>
      <pubDate>Fri, 08 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-05-08-have-you-met-flynn/</guid>
      <description>

&lt;p&gt;Yesterday Heroku announced the good bye to free tier as we know it. The short story is, free tier was abused by people pinging their dynos to stay alive &lt;sup&gt;24&lt;/sup&gt;&amp;frasl;&lt;sub&gt;7&lt;/sub&gt; (they went to sleep after an hour of inactivity before), and now they introduced a hobby tier which is basically the same as the old free tier (without the sleep) for $7 a month. Pretty good deal, but I already have so much server power on premise that I feel I can&amp;rsquo;t justify paying another provider to host my stuff.&lt;/p&gt;

&lt;p&gt;I started thinking about how I could set up my own cluster, looking at talk on Docker, Kubernetes and Mesos. It all seemed a bit over my head. It all looked great but I couldn&amp;rsquo;t really find any resources where to begin, where to put down the shovel and dig. The talks went in-depth and over my head, so many terms I haven&amp;rsquo;t heard of before. Then in a comment someone mentioned it.&lt;/p&gt;

&lt;p&gt;Today I met Flynn.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Throw away the duct tape. Say hello to Flynn.&lt;/p&gt;

&lt;p&gt;Flynn fixes everything that&amp;rsquo;s wrong with the process of deploying, scaling, and managing your applications. So they run the way they&amp;rsquo;re supposed to – with ease. And you can do more of what you want to do and less of what you have to do.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what Flynn promises when you reach &lt;a href=&#34;https://flynn.io/&#34;&gt;https://flynn.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I guess you could say Flynn is your own Heroku hosted by you. Your own PaaS on premise or in the cloud. Why I make the Heroku comparsion is because I come from Heroku to Flynn, but that&amp;rsquo;s not all:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use Heroku buildpacks &lt;code&gt;BUILDPACK_URL=https://github.com/AdmitHub/meteor-buildpack-horse.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Deploying with git is a thing with Flynn - &lt;code&gt;git push flynn master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pull repositories from your Github account with a read only token (see screenshot further down below)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;deploy-a-meteor-application-to-flynn:0fb3f36d2f801773c96c5bdeb80ae105&#34;&gt;Deploy a Meteor application to Flynn&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;meteor create --example todos
cd todos
git init
git add .
git commit -m &amp;quot;partytime&amp;quot;
flynn create todos
flynn env set BUILDPACK_URL=https://github.com/AdmitHub/meteor-buildpack-horse.git
flynn env set MONGO_URL=mongodb://xxx:yyy@ds039078.mongolab.com:39078/heroku_app000000
flynn env set ROOT_URL=http://todos.your.cluster.domain
git push flynn master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And like that it&amp;rsquo;s done, your app is running on Flynn. It even supports sticky sessions if you want to run it on multiple containers.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;flynn route add http -s todos-web --sticky mydomain.com
flynn scale web=3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From the docs (&lt;a href=&#34;https://flynn.io/docs/cli#route):&#34;&gt;https://flynn.io/docs/cli#route):&lt;/a&gt;&lt;br /&gt;
&lt;code&gt;--sticky&lt;/code&gt; enable cookie-based sticky routing (http only)&lt;/p&gt;

&lt;p&gt;I will try this with &lt;a href=&#34;https://github.com/meteorhacks/cluster&#34;&gt;https://github.com/meteorhacks/cluster&lt;/a&gt; when I have the time&lt;/p&gt;

&lt;h2 id=&#34;screenshots:0fb3f36d2f801773c96c5bdeb80ae105&#34;&gt;Screenshots&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/flynn_dashboard.png&#34; alt=&#34;Dashboard&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The dashboard&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/flynn_github.png&#34; alt=&#34;Deploy from Github&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Deploy from Github&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/flynn_infoscreen.png&#34; alt=&#34;DSadmin&#34; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Digital Signage admin, a Meteor application running on Flynn&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I moved one of my less business critical application to Flynn, a Meteor app for controlling our digital signage screens, and it works really well. A few kinks had to be sorted out, but most problems was due to me not reading the docs good enough. Flynn doesn&amp;rsquo;t have a MongoDB component yet (there&amp;rsquo;s only a postgres for now) so I took the moment to try out MongoDB MMS and deploy a cluster on promise. All in all it took a few hours from starting reading about Flynn to deploying an app.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Convert HEX to NCS</title>
      <link>http://localhost:1313/blog/2015-01-22-convert-hex-to-ncs/</link>
      <pubDate>Thu, 22 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-01-22-convert-hex-to-ncs/</guid>
      <description>&lt;p&gt;Yesterday I created a simple API to get the closest NCS of a hex triplet (and then the hex triplet of that NCS). I later expanded it into a site where you can use the API without implementing it yourself and see the color it locates.&lt;/p&gt;

&lt;p&gt;You can find the site at &lt;a href=&#34;http://code.maxmalm.se/ncs/&#34;&gt;http://code.maxmalm.se/ncs/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, I know the image refers to the Pantone color chart instead of NCS.&lt;/p&gt;

&lt;p&gt;The site uses Kimono Labs and Encycolorpedia to serve you this data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Open source dashboard with packages</title>
      <link>http://localhost:1313/blog/2015-01-19-open-source-dashboard/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-01-19-open-source-dashboard/</guid>
      <description>&lt;p&gt;What I would like to see is an open source dashboard for all the data you can imagine. Something like &lt;a href=&#34;https://ducksboard.com/&#34;&gt;https://ducksboard.com/&lt;/a&gt; but no API connection is built in. You want to add Google Analytics? Write a package or see if someone else has built one. Couldn&amp;rsquo;t find one and you actually made one? Publish it let others use it in their own dashboard.&lt;/p&gt;

&lt;p&gt;This just popped into my head yesterday while trying to sleep. I haven&amp;rsquo;t fleshed out any details but I might write more in depth and try to produce this.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Diving in with Joylent</title>
      <link>http://localhost:1313/blog/2015-01-13-diving-in-joylent/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-01-13-diving-in-joylent/</guid>
      <description>&lt;p&gt;Yesterday I started my trial run with Joylent to see how my body reacts to it. For now I&amp;rsquo;m going to eat Joylent as my primary food source for 9 days coupled with whey protein after workouts. The plan is to do this trial run for 9 days, see how I feel and if I feel good enough I&amp;rsquo;m going to take a break then do it for 30 days.&lt;/p&gt;

&lt;p&gt;Joylent (a variant of &lt;a href=&#34;http://en.wikipedia.org/wiki/Soylent_%28drink%29&#34;&gt;Soylent&lt;/a&gt;) is a nutrional drink containing 100% of the daily intake of everything. Each bag of powder contains 2119 kcal and it&amp;rsquo;s recommended to eat in three meals. I&amp;rsquo;m going to do this with &lt;a href=&#34;http://en.wikipedia.org/wiki/Intermittent_fasting&#34;&gt;intermittent fasting&lt;/a&gt; for two meals. Half after work and half after workout.&lt;/p&gt;

&lt;p&gt;Should these 9 days go well I&amp;rsquo;m planning the following for the 30 days:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monday&lt;/strong&gt;: Workout (SL 5x5). IF meals and whey protein&lt;br /&gt;
&lt;strong&gt;Tuesday&lt;/strong&gt;: IF meals. Some light walking.&lt;br /&gt;
&lt;strong&gt;Wednesday&lt;/strong&gt;: Workout (SL 5x5). IF meals and whey protein&lt;br /&gt;
&lt;strong&gt;Thursday&lt;/strong&gt;: IF meals. Some light walking.&lt;br /&gt;
&lt;strong&gt;Friday&lt;/strong&gt;: Workout (SL 5x5). IF meals and whey protein&lt;br /&gt;
&lt;strong&gt;Saturday&lt;/strong&gt;: Three meals of Joylent spread out over the day&lt;br /&gt;
&lt;strong&gt;Sunday&lt;/strong&gt;: IF meals. Some light walking.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Paper Towns</title>
      <link>http://localhost:1313/blog/2015-01-12-paper-towns/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-01-12-paper-towns/</guid>
      <description>&lt;p&gt;This is the first book I&amp;rsquo;ve read in a long long time. Probably the first one in English since I left school.&lt;/p&gt;

&lt;p&gt;This is the story about Quentin and his neighbour, Margo. Quentin is the typical nerdy kid and Margo is the to be prom queen. Margo turns Quentin&amp;rsquo;s life around and runs away, Quentin then feels he have to find Margo with the help of the clues she left behind.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a good and easy read, which was good for me since all I&amp;rsquo;ve read in English for the past year is just Reddit and technical document. I finished this in a weekend and it really got me back to reading. I&amp;rsquo;ve already ordered some other books labeled &lt;em&gt;young adults&lt;/em&gt; which I feel might be my current reading standard. I still have all the Game of Thrones books looking at my from my bookshelves. Maybe some day.&lt;/p&gt;

&lt;p&gt;ISBN (en): &lt;strong&gt;9780525478188&lt;/strong&gt;&lt;br /&gt;
ISBN (se): &lt;strong&gt;9789163877360&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Header image from &lt;a href=&#34;http://the-sentimentalist.deviantart.com/art/Paper-Towns-214923369&#34;&gt;http://the-sentimentalist.deviantart.com/art/Paper-Towns-214923369&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Posten &#43; Pushbullet == true;</title>
      <link>http://localhost:1313/blog/2015-01-12-pushbullet-posten/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-01-12-pushbullet-posten/</guid>
      <description>

&lt;p&gt;A couple of months ago I made a small site to track parcels sent via Posten (Swedish postal service) with Pushbullet.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s really simple, you put in you Pushbullet access token, your tracking ID and put a name for the event (if you call it &amp;ldquo;headphones&amp;rdquo;, every push will have that title). You&amp;rsquo;ll get a push confirming it works then you&amp;rsquo;ll get a push every time the status of the parcel changes (checks every 5 minutes). Once the status is set to delivered&lt;/p&gt;

&lt;p&gt;Enjoy! &lt;a href=&#34;http://code.maxmalm.se/posten&#34;&gt;http://code.maxmalm.se/posten&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-ui:541718aca2e03eef7427ade5576d8cb6&#34;&gt;The UI&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/posten.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-push-at-pushbullet-com:541718aca2e03eef7427ade5576d8cb6&#34;&gt;The push at pushbullet.com&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://localhost:1313/assets/posten2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My workout app vision</title>
      <link>http://localhost:1313/blog/2015-01-11-my-workout-app-vision/</link>
      <pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2015-01-11-my-workout-app-vision/</guid>
      <description>

&lt;p&gt;Since I&amp;rsquo;ve started trying out Meteor for development I&amp;rsquo;ve been thinking a lot of what kind of application I want to make.
Maybe Meteor isn&amp;rsquo;t the right platform to use for this project at all, but I want to try it out to really dive into the language.&lt;/p&gt;

&lt;p&gt;The idea came from me using Stronglifts 5x5 app. It&amp;rsquo;s very limiting until recently and the free version only let&amp;rsquo;s you do the absolute program they&amp;rsquo;ve decided. Fair enough, they can set boundaries within their own apps as they like. The thing that go me mad is that I bought the &amp;ldquo;power up&amp;rdquo;-package which included &amp;ldquo;everything&amp;rdquo;. They later on added another category of addons which&amp;hellip; yes, wasn&amp;rsquo;t unlocked bu the package I bought.&lt;/p&gt;

&lt;p&gt;Anyways, what I want to make is an open repository for workout, or just for yourself.&lt;/p&gt;

&lt;h2 id=&#34;scenario-1:c9ca8a9aa57df8851c9cde54d04f8a19&#34;&gt;Scenario 1&lt;/h2&gt;

&lt;p&gt;Start the app, add days (A, B, C), add workouts to days, set weight gain and how many sets (for example, 5x5, 3x12 etc) per routine. First time you go to the gym it serves you day A and you check off the lifts as your workout progresses, next day B etc, the starts over at A when it&amp;rsquo;s done. That&amp;rsquo;s it, you don&amp;rsquo;t have to use any other feature and it&amp;rsquo;s kinda like any workout app there.&lt;/p&gt;

&lt;h2 id=&#34;scenario-2:c9ca8a9aa57df8851c9cde54d04f8a19&#34;&gt;Scenario 2&lt;/h2&gt;

&lt;p&gt;You hear about this &lt;strong&gt;Sailor Lifting Routine&lt;/strong&gt; and you want to try it for a couple of weeks. You start the app and search for &lt;em&gt;sailor&lt;/em&gt;. Here you can find routines published by other (registered) users, you can browse them, see revisions (version 1, 2, 3), author comments (on rest day do some light power walking).&lt;/p&gt;

&lt;p&gt;You find the one you like and you choose to use it. Just like that you have a routine in your app ready to go.&lt;/p&gt;

&lt;p&gt;You could also search for routines that includes various workouts you want to miss, say you want squats and deaflift; you choose these and get search results which includes these workouts.&lt;/p&gt;

&lt;h2 id=&#34;scenario-3:c9ca8a9aa57df8851c9cde54d04f8a19&#34;&gt;Scenario 3&lt;/h2&gt;

&lt;p&gt;You want to share your knowledge about training with other users and you are the Sailor we talked about in the last scenario. You want people to use your workout because you believe in it. So you make the routine and you publish it to the open repository under your username and a nifty title (thesailor:workout). People can now give you feedback, ask questions and discuss your workout inside the app or from the web. Others can even use it outside this application in other applications from the open API.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re not happy with your routine or want to change something you can always publish a new version of it. You will be able to find the old revisions but the latest one will be the default one. Users using your routine will get a notification that&amp;rsquo;s it&amp;rsquo;s been updated but can choose not to change it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The reason I want to build this in Meteor is because I can use the same codebase in the mobile app, the webapp, and the server side. It&amp;rsquo;s also real time which means when you check off a lift it&amp;rsquo;s already synced in the database, no need to schedule syncs and backups from the client. Of course something to sync later would have to be implemented to allow the user to use the app without internet.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ionic Framework - with vagrant</title>
      <link>http://localhost:1313/blog/2014-09-15-ionic-framework-vagrant/</link>
      <pubDate>Mon, 15 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014-09-15-ionic-framework-vagrant/</guid>
      <description>&lt;p&gt;My last post was about how to get Ionic up and running manually. It&amp;rsquo;s not a good method to get started with Ionic and it just takes time and unnecessary troubleshooting. This solution works with Windows, OS X and Linux.&lt;/p&gt;

&lt;p&gt;Now I&amp;rsquo;m using my own fork of the official vagrant box: ionix-box&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s easy to get started with:&lt;/p&gt;

&lt;p&gt;Install Virtualbox, Vagrant and Git Bash (for Windows) then run&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ git clone https://github.com/benjick/ionic-box&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ cd ionic-box&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ vagrant up&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And boom, you can now develop Ionic apps in a Linux environment (currently based on Ubuntu 14.04).&lt;/p&gt;

&lt;p&gt;See full docs at &lt;a href=&#34;https://github.com/benjick/ionic-box/&#34;&gt;https://github.com/benjick/ionic-box/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configuring tenants for WSO2 Enterprise Mobility Manager 1.1.0</title>
      <link>http://localhost:1313/blog/2014-06-17-configuring-wso2-enterprise-mobility-manager-110/</link>
      <pubDate>Thu, 17 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014-06-17-configuring-wso2-enterprise-mobility-manager-110/</guid>
      <description>&lt;p&gt;Log into your carbon server. &lt;a href=&#34;https://172.16.1.123:9443/carbon/&#34;&gt;https://172.16.1.123:9443/carbon/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Default user:password is &lt;strong&gt;admin:admin&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Go to Multitenancy &amp;gt; Add new tenant and fill in all fields.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/kWBkxEL.png&#34; alt=&#34;Alt text&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Save and go to &lt;a href=&#34;https://172.16.1.123:9443/emm&#34;&gt;https://172.16.1.123:9443/emm&lt;/a&gt; and login with your new credentials. In my case admin@maxmalm.se and the password I picked.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I got an error here when the site redirected me to localhost instead of the IP-address, I solved this in a manner not found in the documentation so it might be ugly and non-recommended. Anyways:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nano repository/conf/sso-idp-config.xml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and change&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;AssertionConsumerService&amp;gt;https://localhost:9443/emm/acs&amp;lt;/AssertionConsumerService&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;AssertionConsumerService&amp;gt;https://172.16.1.123:9443/emm/acs&amp;lt;/AssertionConsumerService&amp;gt;&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ionic Framework quick setup (Ubuntu 12.04, Elementary Luna)</title>
      <link>http://localhost:1313/blog/2014-07-09-ionic-framework-ubuntu-elementary/</link>
      <pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/2014-07-09-ionic-framework-ubuntu-elementary/</guid>
      <description>&lt;p&gt;The &amp;ldquo;Getting Started&amp;rdquo; page for Ionic looks like it&amp;rsquo;s really simple! But it&amp;rsquo;s not really and I&amp;rsquo;ve struggled with this for the whole day, but I finally got it to work. I hope someone finds this useful.&lt;/p&gt;

&lt;p&gt;This is for Android development, I don&amp;rsquo;t have a Mac so I can&amp;rsquo;t test this for iOS&lt;/p&gt;

&lt;p&gt;Download Android SDK&lt;br /&gt;
&lt;a href=&#34;https://developer.android.com/sdk/index.html#download&#34;&gt;https://developer.android.com/sdk/index.html#download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add Android SDK to path (adjust this to your actual paths)&lt;br /&gt;
&lt;code&gt;export PATH=$PATH:/home/max/development/adt-bundle/sdk/platform-tools:/home/max/development/adt-bundle/sdk/tools&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install JDK&lt;br /&gt;
&lt;code&gt;sudo apt-get install openjdk-7-jdk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;MORE PATHS (JDK)&lt;br /&gt;
&lt;code&gt;export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install node.js&lt;br /&gt;
&lt;code&gt;sudo apt-get install python-software-properties&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo add-apt-repository ppa:chris-lea/node.js&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;sudo apt-get install nodejs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install ant and git&lt;br /&gt;
&lt;code&gt;sudo apt-get install ant ant-contrib ant-optional ant-gcj git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;android&lt;/code&gt; and install Android 19&lt;/p&gt;

&lt;p&gt;Run &lt;code&gt;android avd&lt;/code&gt; to create an Android emulator&lt;/p&gt;

&lt;p&gt;Create a project&lt;br /&gt;
&lt;code&gt;ionic start myapp tabs&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;cd myapp&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;ionic platform add android&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;ionic emulate android&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>